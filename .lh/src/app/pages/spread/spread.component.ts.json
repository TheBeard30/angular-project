{
    "sourceFile": "src/app/pages/spread/spread.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 66,
            "patches": [
                {
                    "date": 1626920255556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1626921443215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n         statusBar.bind(spread);\n \t}\n \n \t/**\n-\t * 绑定各种事件\n+\t * 绑定各种响应事件\n \t * @param {Worksheet} sheet  工作表 \n \t */\n \tbindEvents(sheet: Worksheet){\n \t\tsheet.bind(GC.Spread.Sheets.Events.CellClick,this.cellClick);\n"
                },
                {
                    "date": 1626921605499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,10 +78,10 @@\n \t\tsheet.bind(GC.Spread.Sheets.Events.CellClick,this.cellClick);\n \n \t\tsheet.bind(GC.Spread.Sheets.Events.EditEnded,this.editEnded);\n \t\t\n+\t\tthis.bindSelectionChanged(sheet);\n \t\t\n-\t\t\n \t}\n \n \n \tcellClick = (event:{[p: string]: any},data: {[p: string]: any}) => {\n"
                },
                {
                    "date": 1626922251870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,10 @@\n \t}\n \n \n \tbindSelectionChanged(sheet: Worksheet){\n-\n+\t\t\n+\t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,this.selectionChanged);\n \t}\n \n \n \tselectionChanged = (event:{[p: string]: any},data: {[p: string]: any}) => {\n"
                },
                {
                    "date": 1626922491120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n \t}\n \n \n \tbindSelectionChanged(sheet: Worksheet){\n-\t\t\n+\t\tlet previes\n \t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,this.selectionChanged);\n \t}\n \n \n"
                },
                {
                    "date": 1626922765485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n \t}\n \n \n \tbindSelectionChanged(sheet: Worksheet){\n-\t\tlet previes\n+\t\tlet previousDenpendentNodes,previousPrecedentNodes;\n \t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,this.selectionChanged);\n \t}\n \n \n"
                },
                {
                    "date": 1626923160070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,8 +106,9 @@\n \t}\n \n \n \tselectionChanged = (event:{[p: string]: any},data: {[p: string]: any}) => {\n+\t\tif(previousPrecedentNodes)\n \n \t}\n \n \n"
                },
                {
                    "date": 1626923501534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,12 @@\n \n \n \tdrawOpen: boolean = false;\n \n+\tconstructor(){\n+\n+\t}\n+\n \tngOnInit(): void {\n \t\t\n \t}\n \n@@ -99,23 +103,27 @@\n \t\t\n \t}\n \n \n+\t/**\n+\t * 绑定选择改变事件\n+\t * @param {Worksheet} sheet  工作表 \n+\t */\n \tbindSelectionChanged(sheet: Worksheet){\n \t\tlet previousDenpendentNodes,previousPrecedentNodes;\n-\t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,this.selectionChanged);\n+\t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,(event:{[p: string]: any},data: {[p: string]: any}) => {\n+\n+\t\t});\n+\t\t\n \t}\n \n \n-\tselectionChanged = (event:{[p: string]: any},data: {[p: string]: any}) => {\n-\t\tif(previousPrecedentNodes)\n+\t\n \n-\t}\n \n \n \n \n-\n \tpaintDependentCells(sheet: Worksheet,cellList: Array<any>){\n \n \t}\n \n"
                },
                {
                    "date": 1626924872392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,11 +108,19 @@\n \t * 绑定选择改变事件\n \t * @param {Worksheet} sheet  工作表 \n \t */\n \tbindSelectionChanged(sheet: Worksheet){\n-\t\tlet previousDenpendentNodes,previousPrecedentNodes;\n+\t\tlet previousDenpendentTree,previousPrecedentTree;\n \t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,(event:{[p: string]: any},data: {[p: string]: any}) => {\n+\t\t\tif(!previousDenpendentTree || !previousPrecedentTree){\n \n+\t\t\t}\n+\n+\t\t\t\n+\n+\n+\n+\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626924909917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,8 +119,10 @@\n \n \n \n \n+\n+\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626924970297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,8 +121,10 @@\n \n \n \n \n+\n+\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626925053574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,17 +114,20 @@\n \t\t\tif(!previousDenpendentTree || !previousPrecedentTree){\n \n \t\t\t}\n \n-\t\t\t\n+\t\t\tconst row = data.newSelection[0].row;\n+\t\t\tconst col = data.newSelection[0].col;\n \n \n \n \n \n \n \n \n+\n+\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626925125004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,8 +117,9 @@\n \n \t\t\tconst row = data.newSelection[0].row;\n \t\t\tconst col = data.newSelection[0].col;\n \n+\t\t\tsheet.getPrecedents(row,col);\n \n \n \n \n@@ -126,8 +127,9 @@\n \n \n \n \n+\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626925282094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,10 +79,8 @@\n \t * @param {Worksheet} sheet  工作表 \n \t */\n \tbindEvents(sheet: Worksheet){\n \t\tsheet.bind(GC.Spread.Sheets.Events.CellClick,this.cellClick);\n-\n-\t\tsheet.bind(GC.Spread.Sheets.Events.EditEnded,this.editEnded);\n \t\t\n \t\tthis.bindSelectionChanged(sheet);\n \t\t\n \t}\n@@ -98,11 +96,9 @@\n \t\tconsole.log(cellPrecedents);\n \t\tthis.paintPrecedentCells(this.sheet,cellPrecedents);\n \t};\n \n-\teditEnded = (event:{[p: string]: any},data: {[p: string]: any}) => {\n-\t\t\n-\t}\n+\t\n \n \n \t/**\n \t * 绑定选择改变事件\n@@ -117,9 +113,9 @@\n \n \t\t\tconst row = data.newSelection[0].row;\n \t\t\tconst col = data.newSelection[0].col;\n \n-\t\t\tsheet.getPrecedents(row,col);\n+\t\t\tconst cellRangeList = sheet.getPrecedents(row,col);\n \n \n \n \n"
                },
                {
                    "date": 1626926357993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,8 +129,25 @@\n \t\t\n \t}\n \n \n+\tcreatePrecedentTree(sheet: Worksheet,row: number,col: number,level?: number){\n+\t\tif(level == undefined){\n+\t\t\tlevel = 0;\n+\t\t}\n+\n+\t\tconst node = {\n+\t\t\trow: row,\n+\t\t\tcol: col,\n+\t\t\tlevel: level,\n+\t\t\tprecedentChildNodes: undefined\n+\t\t};\n+\n+\n+\n+\t}\n+\n+\n \t\n \n \n \n"
                },
                {
                    "date": 1626926831869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,11 +140,25 @@\n \t\t\tcol: col,\n \t\t\tlevel: level,\n \t\t\tprecedentChildNodes: undefined\n \t\t};\n+\t\tconst childNodes = this.addPrecedentChildNodes(sheet,row,col,level);\n+\t\tif(childNodes.length > 0){\n+\t\t\tnode.precedentChildNodes = childNodes;\n+\t\t}\n \n+\t\treturn node;\n \n+\t}\n \n+\n+\taddPrecedentChildNodes(sheet: Worksheet,row: number, col: number,level: number){\n+\t\tconst nodeList = [];\n+\t\tconst cellRangeList = sheet.getPrecedents(row,col);\n+\t\tif(cellRangeList.length > 0){\n+\n+\t\t}\n+\t\treturn nodeList;\n \t}\n \n \n \t\n"
                },
                {
                    "date": 1626926886103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n \n \t\t\tconst row = data.newSelection[0].row;\n \t\t\tconst col = data.newSelection[0].col;\n \n-\t\t\tconst cellRangeList = sheet.getPrecedents(row,col);\n+\t\t\tthis.createPrecedentTree(sheet,row,col);\n \n \n \n \n"
                },
                {
                    "date": 1626932813046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,8 +154,9 @@\n \taddPrecedentChildNodes(sheet: Worksheet,row: number, col: number,level: number){\n \t\tconst nodeList = [];\n \t\tconst cellRangeList = sheet.getPrecedents(row,col);\n \t\tif(cellRangeList.length > 0){\n+\t\t\t\n \n \t\t}\n \t\treturn nodeList;\n \t}\n"
                },
                {
                    "date": 1626933436254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n \n \t\t\tconst row = data.newSelection[0].row;\n \t\t\tconst col = data.newSelection[0].col;\n \n-\t\t\tthis.createPrecedentTree(sheet,row,col);\n+\t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \n \n \n \n@@ -154,9 +154,22 @@\n \taddPrecedentChildNodes(sheet: Worksheet,row: number, col: number,level: number){\n \t\tconst nodeList = [];\n \t\tconst cellRangeList = sheet.getPrecedents(row,col);\n \t\tif(cellRangeList.length > 0){\n-\t\t\t\n+\t\t\tlevel++;\n+\t\t\tfor(let i = 0; i < cellRangeList.length; i++){\n+\t\t\t\tconst cell = cellRangeList[i];\n+\t\t\t\tconst row = cell.row;\n+\t\t\t\tconst col = cell.col;\n+\t\t\t\tconst rowCount = cell.rowCount;\n+\t\t\t\tconst colCount = cell.colCount;\n+\t\t\t\tfor(let j = row; j < row + rowCount; j++){\n+\t\t\t\t\tfor(let k = col; k < col + colCount; k++){\n+\t\t\t\t\t\tconst node = this.createPrecedentTree(sheet,j,k,level);\n+\t\t\t\t\t\tnodeList.push(node);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n \n \t\t}\n \t\treturn nodeList;\n \t}\n"
                },
                {
                    "date": 1626933456051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,15 +87,15 @@\n \n \n \tcellClick = (event:{[p: string]: any},data: {[p: string]: any}) => {\n \t\t// 获取从属单元格\n-\t\tconst cellDependents = this.sheet.getDependents(data.row,data.col);\n-\t\tconsole.log(cellDependents);\n+\t\t// const cellDependents = this.sheet.getDependents(data.row,data.col);\n+\t\t// console.log(cellDependents);\n \n-\t\t// 获取引用单元格\n-\t\tconst cellPrecedents = this.sheet.getPrecedents(data.row,data.col);\n-\t\tconsole.log(cellPrecedents);\n-\t\tthis.paintPrecedentCells(this.sheet,cellPrecedents);\n+\t\t// // 获取引用单元格\n+\t\t// const cellPrecedents = this.sheet.getPrecedents(data.row,data.col);\n+\t\t// console.log(cellPrecedents);\n+\t\t// this.paintPrecedentCells(this.sheet,cellPrecedents);\n \t};\n \n \t\n \n"
                },
                {
                    "date": 1626933583672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,14 +161,20 @@\n \t\t\t\tconst row = cell.row;\n \t\t\t\tconst col = cell.col;\n \t\t\t\tconst rowCount = cell.rowCount;\n \t\t\t\tconst colCount = cell.colCount;\n-\t\t\t\tfor(let j = row; j < row + rowCount; j++){\n-\t\t\t\t\tfor(let k = col; k < col + colCount; k++){\n-\t\t\t\t\t\tconst node = this.createPrecedentTree(sheet,j,k,level);\n-\t\t\t\t\t\tnodeList.push(node);\n+\t\t\t\tif(rowCount > 1 || colCount > 1){\n+\t\t\t\t\tfor(let j = row; j < row + rowCount; j++){\n+\t\t\t\t\t\tfor(let k = col; k < col + colCount; k++){\n+\t\t\t\t\t\t\tconst node = this.createPrecedentTree(sheet,j,k,level);\n+\t\t\t\t\t\t\tnodeList.push(node);\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n+\t\t\t\t}else{\n+\t\t\t\t\tconst node = this.createPrecedentTree(sheet,row,col,level);\n+\t\t\t\t\tnodeList.push(node);\n \t\t\t\t}\n+\t\t\t\t\n \t\t\t}\n \n \t\t}\n \t\treturn nodeList;\n"
                },
                {
                    "date": 1626933600423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,9 @@\n \t\t\tconst col = data.newSelection[0].col;\n \n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \n+\t\t\tconsole.log(precedentTree);\n \n \n \n \n@@ -124,8 +125,9 @@\n \n \n \n \n+\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626933650452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,10 +110,10 @@\n \t\t\tif(!previousDenpendentTree || !previousPrecedentTree){\n \n \t\t\t}\n \n-\t\t\tconst row = data.newSelection[0].row;\n-\t\t\tconst col = data.newSelection[0].col;\n+\t\t\tconst row = data.newSelections[0].row;\n+\t\t\tconst col = data.newSelections[0].col;\n \n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \n \t\t\tconsole.log(precedentTree);\n"
                },
                {
                    "date": 1626934322877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,38 +180,23 @@\n \n \t\t}\n \t\treturn nodeList;\n \t}\n-\n-\n \t\n \n+\tpaintPrecedentCells(sheet: Worksheet,nodeList: Array<TreeNode>){\n+\t\tsheet.suspendPaint();\n+\t\t\n+\t\tsheet.resumePaint();\n \n+\t}\n \n-\n-\n \tpaintDependentCells(sheet: Worksheet,cellList: Array<any>){\n \n \t}\n \n-\tpaintPrecedentCells(sheet: Worksheet,cellList: Array<any>){\n-\t\tsheet.suspendPaint();\n-\t\tfor(let i = 0; i < cellList.length; i++){\n-\t\t\tconst cellInfo = cellList[i];\n-            const rowRange = cellInfo.rowCount + cellInfo.row;\n-\t\t\tconst colRange = cellInfo.colCount + cellInfo.col;\n-\t\t\tfor(let row = cellInfo.row; row < rowRange; row++){\n-\t\t\t\tfor(let col = cellInfo.col; col < colRange; col++){\n-\t\t\t\t\tsheet.getCell(row,col).backColor('red');\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tsheet.resumePaint();\n \n-\t}\n \n-\n-\n \tchangeDrawStatus(){\n \t\tthis.drawOpen = !this.drawOpen;\n \t}\n \n@@ -221,4 +206,13 @@\n \n   \n \n }\n+\n+\n+interface TreeNode{\n+\trow: number;\n+\tcol: number;\n+\tlevel: number;\n+\tprecedentChildNodes: Array<TreeNode>;\n+\tdependentChildNodes: Array<TreeNode>;\n+}\n"
                },
                {
                    "date": 1626934420918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n \t\tsheet.resumePaint();\n \n \t}\n \n-\tpaintDependentCells(sheet: Worksheet,cellList: Array<any>){\n+\tpaintDependentCells(sheet: Worksheet,cellList: Array<TreeNode>){\n \n \t}\n \n \n"
                },
                {
                    "date": 1626934520405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,8 +117,9 @@\n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \n \t\t\tconsole.log(precedentTree);\n \n+\t\t\tthis.paintPrecedentCells(sheet,precedentTree)\n \n \n \n \n@@ -126,8 +127,9 @@\n \n \n \n \n+\n \t\t});\n \t\t\n \t}\n \n@@ -182,16 +184,16 @@\n \t\treturn nodeList;\n \t}\n \t\n \n-\tpaintPrecedentCells(sheet: Worksheet,nodeList: Array<TreeNode>){\n+\tpaintPrecedentCells(sheet: Worksheet,node: TreeNode){\n \t\tsheet.suspendPaint();\n \t\t\n \t\tsheet.resumePaint();\n \n \t}\n \n-\tpaintDependentCells(sheet: Worksheet,cellList: Array<TreeNode>){\n+\tpaintDependentCells(sheet: Worksheet,node: TreeNode){\n \n \t}\n \n \n"
                },
                {
                    "date": 1626934568492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,8 +187,9 @@\n \n \tpaintPrecedentCells(sheet: Worksheet,node: TreeNode){\n \t\tsheet.suspendPaint();\n \t\t\n+\t\t\n \t\tsheet.resumePaint();\n \n \t}\n \n"
                },
                {
                    "date": 1626934690203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n \t\t\n \t}\n \n \n-\tcreatePrecedentTree(sheet: Worksheet,row: number,col: number,level?: number){\n+\tcreatePrecedentTree(sheet: Worksheet,row: number,col: number,level?: number): TreeNode{\n \t\tif(level == undefined){\n \t\t\tlevel = 0;\n \t\t}\n \n@@ -186,10 +186,10 @@\n \t\n \n \tpaintPrecedentCells(sheet: Worksheet,node: TreeNode){\n \t\tsheet.suspendPaint();\n+\n \t\t\n-\t\t\n \t\tsheet.resumePaint();\n \n \t}\n \n@@ -215,7 +215,7 @@\n interface TreeNode{\n \trow: number;\n \tcol: number;\n \tlevel: number;\n-\tprecedentChildNodes: Array<TreeNode>;\n-\tdependentChildNodes: Array<TreeNode>;\n+\tprecedentChildNodes?: Array<TreeNode>;\n+\tdependentChildNodes?: Array<TreeNode>;\n }\n"
                },
                {
                    "date": 1626934734134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n \n \t}\n \n \n-\taddPrecedentChildNodes(sheet: Worksheet,row: number, col: number,level: number){\n+\taddPrecedentChildNodes(sheet: Worksheet,row: number, col: number,level: number): Array<TreeNode>{\n \t\tconst nodeList = [];\n \t\tconst cellRangeList = sheet.getPrecedents(row,col);\n \t\tif(cellRangeList.length > 0){\n \t\t\tlevel++;\n"
                },
                {
                    "date": 1626934773662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,19 +117,11 @@\n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \n \t\t\tconsole.log(precedentTree);\n \n-\t\t\tthis.paintPrecedentCells(sheet,precedentTree)\n+\t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n \n \n-\n-\n-\n-\n-\n-\n-\n-\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626934864544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,8 @@\n \t\t\tconst col = data.newSelections[0].col;\n \n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \n-\t\t\tconsole.log(precedentTree);\n \n \t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n \n \n@@ -176,9 +175,9 @@\n \t\treturn nodeList;\n \t}\n \t\n \n-\tpaintPrecedentCells(sheet: Worksheet,node: TreeNode){\n+\tpaintPrecedentCells(sheet: Worksheet,node: TreeNode,clear: boolean = false){\n \t\tsheet.suspendPaint();\n \n \t\t\n \t\tsheet.resumePaint();\n"
                },
                {
                    "date": 1626935052538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,10 +177,12 @@\n \t\n \n \tpaintPrecedentCells(sheet: Worksheet,node: TreeNode,clear: boolean = false){\n \t\tsheet.suspendPaint();\n-\n-\t\t\n+\t\tthis.sheet.getCell(node.row,node.col).backColor(clear ? 'white' : 'red');\n+\t\tif(node.precedentChildNodes){\n+\t\t\tnode.precedentChildNodes.forEach(child => this.paintPrecedentCells(sheet,child));\n+\t\t}\n \t\tsheet.resumePaint();\n \n \t}\n \n"
                },
                {
                    "date": 1626935176927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,12 +115,14 @@\n \t\t\tconst col = data.newSelections[0].col;\n \n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \n+            if(precedentTree.precedentChildNodes){\n+\t\t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n+\t\t\t}\n+\t\t\t\n \n-\t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n \n-\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626935183476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,10 +119,8 @@\n             if(precedentTree.precedentChildNodes){\n \t\t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n \t\t\t}\n \t\t\t\n-\n-\n \t\t});\n \t\t\n \t}\n \n"
                },
                {
                    "date": 1626935334304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,11 @@\n GC.Spread.Common.CultureManager.culture('zh-cn');\n import {mockData} from './mock.data';\n \n \n+const precedentLevelColor = ['#FFFFFF', '#19E093', '#09E8DB', '#12A0D1', '#096CE8', '#0926DE'];\n+\n+\n @Component({\n \tselector: 'app-spread',\n \ttemplateUrl: './spread.component.html',\n \tstyleUrls: ['./spread.component.less']\n@@ -28,8 +31,9 @@\n \n \n \tdrawOpen: boolean = false;\n \n+\n \tconstructor(){\n \n \t}\n \n@@ -177,9 +181,9 @@\n \t\n \n \tpaintPrecedentCells(sheet: Worksheet,node: TreeNode,clear: boolean = false){\n \t\tsheet.suspendPaint();\n-\t\tthis.sheet.getCell(node.row,node.col).backColor(clear ? 'white' : 'red');\n+\t\tthis.sheet.getCell(node.row,node.col).backColor(clear ? 'white' : precedentLevelColor[node.level]);\n \t\tif(node.precedentChildNodes){\n \t\t\tnode.precedentChildNodes.forEach(child => this.paintPrecedentCells(sheet,child));\n \t\t}\n \t\tsheet.resumePaint();\n"
                },
                {
                    "date": 1626935548542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,12 +108,14 @@\n \t * 绑定选择改变事件\n \t * @param {Worksheet} sheet  工作表 \n \t */\n \tbindSelectionChanged(sheet: Worksheet){\n-\t\tlet previousDenpendentTree,previousPrecedentTree;\n+\t\tlet previousDenpendentTree: TreeNode,previousPrecedentTree: TreeNode;\n \t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,(event:{[p: string]: any},data: {[p: string]: any}) => {\n \t\t\tif(!previousDenpendentTree || !previousPrecedentTree){\n-\n+\t\t\t\tif(previousPrecedentTree.precedentChildNodes){\n+\t\t\t\t\tthis.paintPrecedentCells(sheet,previousPrecedentTree,true);\n+\t\t\t\t}\n \t\t\t}\n \n \t\t\tconst row = data.newSelections[0].row;\n \t\t\tconst col = data.newSelections[0].col;\n@@ -121,8 +123,9 @@\n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \n             if(precedentTree.precedentChildNodes){\n \t\t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n+\t\t\t\tpreviousPrecedentTree = precedentTree;\n \t\t\t}\n \t\t\t\n \t\t});\n \t\t\n"
                },
                {
                    "date": 1626935584596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,12 +120,12 @@\n \t\t\tconst row = data.newSelections[0].row;\n \t\t\tconst col = data.newSelections[0].col;\n \n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n-\n+\t\t\tpreviousPrecedentTree = precedentTree;\n+\t\t\t\n             if(precedentTree.precedentChildNodes){\n \t\t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n-\t\t\t\tpreviousPrecedentTree = precedentTree;\n \t\t\t}\n \t\t\t\n \t\t});\n \t\t\n"
                },
                {
                    "date": 1626935659998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n \t */\n \tbindSelectionChanged(sheet: Worksheet){\n \t\tlet previousDenpendentTree: TreeNode,previousPrecedentTree: TreeNode;\n \t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,(event:{[p: string]: any},data: {[p: string]: any}) => {\n-\t\t\tif(!previousDenpendentTree || !previousPrecedentTree){\n+\t\t\tif(previousDenpendentTree || previousPrecedentTree){\n \t\t\t\tif(previousPrecedentTree.precedentChildNodes){\n \t\t\t\t\tthis.paintPrecedentCells(sheet,previousPrecedentTree,true);\n \t\t\t\t}\n \t\t\t}\n@@ -121,9 +121,9 @@\n \t\t\tconst col = data.newSelections[0].col;\n \n \t\t\tconst precedentTree = this.createPrecedentTree(sheet,row,col);\n \t\t\tpreviousPrecedentTree = precedentTree;\n-\t\t\t\n+\n             if(precedentTree.precedentChildNodes){\n \t\t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n \t\t\t}\n \t\t\t\n"
                },
                {
                    "date": 1626935860615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,16 +90,8 @@\n \t}\n \n \n \tcellClick = (event:{[p: string]: any},data: {[p: string]: any}) => {\n-\t\t// 获取从属单元格\n-\t\t// const cellDependents = this.sheet.getDependents(data.row,data.col);\n-\t\t// console.log(cellDependents);\n-\n-\t\t// // 获取引用单元格\n-\t\t// const cellPrecedents = this.sheet.getPrecedents(data.row,data.col);\n-\t\t// console.log(cellPrecedents);\n-\t\t// this.paintPrecedentCells(this.sheet,cellPrecedents);\n \t};\n \n \t\n \n"
                },
                {
                    "date": 1626935872490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,17 @@\n \n \n const precedentLevelColor = ['#FFFFFF', '#19E093', '#09E8DB', '#12A0D1', '#096CE8', '#0926DE'];\n \n+interface TreeNode{\n+\trow: number;\n+\tcol: number;\n+\tlevel: number;\n+\tprecedentChildNodes?: Array<TreeNode>;\n+\tdependentChildNodes?: Array<TreeNode>;\n+}\n \n+\n @Component({\n \tselector: 'app-spread',\n \ttemplateUrl: './spread.component.html',\n \tstyleUrls: ['./spread.component.less']\n@@ -203,11 +211,5 @@\n \n }\n \n \n-interface TreeNode{\n-\trow: number;\n-\tcol: number;\n-\tlevel: number;\n-\tprecedentChildNodes?: Array<TreeNode>;\n-\tdependentChildNodes?: Array<TreeNode>;\n-}\n+\n"
                },
                {
                    "date": 1626936046938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n \tpaintPrecedentCells(sheet: Worksheet,node: TreeNode,clear: boolean = false){\n \t\tsheet.suspendPaint();\n \t\tthis.sheet.getCell(node.row,node.col).backColor(clear ? 'white' : precedentLevelColor[node.level]);\n \t\tif(node.precedentChildNodes){\n-\t\t\tnode.precedentChildNodes.forEach(child => this.paintPrecedentCells(sheet,child));\n+\t\t\tnode.precedentChildNodes.forEach(child => this.paintPrecedentCells(sheet,child,clear));\n \t\t}\n \t\tsheet.resumePaint();\n \n \t}\n"
                },
                {
                    "date": 1626936646118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,8 +131,16 @@\n \t\t\n \t}\n \n \n+\t/**\n+\t * 生成\n+\t * @param sheet \n+\t * @param row \n+\t * @param col \n+\t * @param level \n+\t * @returns {TreeNode}\n+\t */\n \tcreatePrecedentTree(sheet: Worksheet,row: number,col: number,level?: number): TreeNode{\n \t\tif(level == undefined){\n \t\t\tlevel = 0;\n \t\t}\n"
                },
                {
                    "date": 1626936798328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,13 +132,13 @@\n \t}\n \n \n \t/**\n-\t * 生成\n-\t * @param sheet \n-\t * @param row \n-\t * @param col \n-\t * @param level \n+\t * 生成引用单元格的树结构\n+\t * @param {Worksheet} sheet  工作表 \n+\t * @param {number}    row    行索引\n+\t * @param {number}    col    列索引\n+\t * @param {number}\t  level  树结构的深度\n \t * @returns {TreeNode}\n \t */\n \tcreatePrecedentTree(sheet: Worksheet,row: number,col: number,level?: number): TreeNode{\n \t\tif(level == undefined){\n"
                },
                {
                    "date": 1626936889752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,8 +160,16 @@\n \n \t}\n \n \n+\t/**\n+\t * 生成引用单元格树的子节点\n+\t * @param {Worksheet} sheet  工作表 \n+\t * @param {number}    row    行索引\n+\t * @param {number}    col    列索引\n+\t * @param {number}\t  level  树结构的深度 \n+\t * @returns {Array<TreeNode>}\n+\t */\n \taddPrecedentChildNodes(sheet: Worksheet,row: number, col: number,level: number): Array<TreeNode>{\n \t\tconst nodeList = [];\n \t\tconst cellRangeList = sheet.getPrecedents(row,col);\n \t\tif(cellRangeList.length > 0){\n"
                },
                {
                    "date": 1626936997232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,15 @@\n \t\treturn nodeList;\n \t}\n \t\n \n-\tpaintPrecedentCells(sheet: Worksheet,node: TreeNode,clear: boolean = false){\n+\t/**\n+\t * 改变引用单元格的背景颜色\n+\t * @param {Worksheet} sheet  工作表 \n+\t * @param {TreeNode}  node   树节点\n+\t * @param {boolean}   clear  是否清除\n+\t */\n+\tpaintPrecedentCells(sheet: Worksheet,node: TreeNode,clear: boolean = false): void{\n \t\tsheet.suspendPaint();\n \t\tthis.sheet.getCell(node.row,node.col).backColor(clear ? 'white' : precedentLevelColor[node.level]);\n \t\tif(node.precedentChildNodes){\n \t\t\tnode.precedentChildNodes.forEach(child => this.paintPrecedentCells(sheet,child,clear));\n"
                },
                {
                    "date": 1626937032200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,21 +90,12 @@\n \t * 绑定各种响应事件\n \t * @param {Worksheet} sheet  工作表 \n \t */\n \tbindEvents(sheet: Worksheet){\n-\t\tsheet.bind(GC.Spread.Sheets.Events.CellClick,this.cellClick);\n-\t\t\n \t\tthis.bindSelectionChanged(sheet);\n-\t\t\n \t}\n \n \n-\tcellClick = (event:{[p: string]: any},data: {[p: string]: any}) => {\n-\t};\n-\n-\t\n-\n-\n \t/**\n \t * 绑定选择改变事件\n \t * @param {Worksheet} sheet  工作表 \n \t */\n"
                },
                {
                    "date": 1626937111441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,9 +211,9 @@\n \t}\n \n \n \n-\tchangeDrawStatus(){\n+\tchangeDrawStatus(): void{\n \t\tthis.drawOpen = !this.drawOpen;\n \t}\n \n \n"
                },
                {
                    "date": 1626937136504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,12 @@\n \tngOnInit(): void {\n \t\t\n \t}\n \n+\tchangeDrawStatus(): void{\n+\t\tthis.drawOpen = !this.drawOpen;\n+\t}\n+\n \t/**\n \t * 电子表格初始化\n \t * @param {Object} $event \n \t */\n@@ -209,20 +213,8 @@\n \tpaintDependentCells(sheet: Worksheet,node: TreeNode){\n \n \t}\n \n-\n-\n-\tchangeDrawStatus(): void{\n-\t\tthis.drawOpen = !this.drawOpen;\n-\t}\n-\n-\n-\n-\n-\n-  \n-\n }\n \n \n \n"
                },
                {
                    "date": 1626937927152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,18 +84,18 @@\n \t/**\n \t * 将状态栏绑定到电子表格工作薄上 \n \t * @param {Workbook} spread  工作薄\n \t */\n-\tbindStatus(spread: Workbook){\n+\tbindStatus(spread: Workbook): void{\n \t\tconst statusBar = new GC.Spread.Sheets.StatusBar.StatusBar(this.statusBar.nativeElement);\n         statusBar.bind(spread);\n \t}\n \n \t/**\n \t * 绑定各种响应事件\n \t * @param {Worksheet} sheet  工作表 \n \t */\n-\tbindEvents(sheet: Worksheet){\n+\tbindEvents(sheet: Worksheet): void{\n \t\tthis.bindSelectionChanged(sheet);\n \t}\n \n \n"
                },
                {
                    "date": 1626937951280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n \t/**\n \t * 绑定选择改变事件\n \t * @param {Worksheet} sheet  工作表 \n \t */\n-\tbindSelectionChanged(sheet: Worksheet){\n+\tbindSelectionChanged(sheet: Worksheet): void{\n \t\tlet previousDenpendentTree: TreeNode,previousPrecedentTree: TreeNode;\n \t\tsheet.bind(GC.Spread.Sheets.Events.SelectionChanged,(event:{[p: string]: any},data: {[p: string]: any}) => {\n \t\t\tif(previousDenpendentTree || previousPrecedentTree){\n \t\t\t\tif(previousPrecedentTree.precedentChildNodes){\n"
                },
                {
                    "date": 1626938067492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n interface TreeNode{\n \trow: number;\n \tcol: number;\n \tlevel: number;\n+\torginStyle?: any;\n \tprecedentChildNodes?: Array<TreeNode>;\n \tdependentChildNodes?: Array<TreeNode>;\n }\n \n"
                },
                {
                    "date": 1626938108419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n import * as GC from \"@grapecity/spread-sheets\";\n+import '@grapecity/spread-sheets-resources-zh';\n import Worksheet = GC.Spread.Sheets.Worksheet;\n import Workbook = GC.Spread.Sheets.Workbook;\n-import '@grapecity/spread-sheets-resources-zh';\n GC.Spread.Common.CultureManager.culture('zh-cn');\n import {mockData} from './mock.data';\n \n \n"
                },
                {
                    "date": 1626938992895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,12 +139,13 @@\n \tcreatePrecedentTree(sheet: Worksheet,row: number,col: number,level?: number): TreeNode{\n \t\tif(level == undefined){\n \t\t\tlevel = 0;\n \t\t}\n-\n+        const style = sheet.getStyle(row,col);\n \t\tconst node = {\n \t\t\trow: row,\n \t\t\tcol: col,\n+\t\t\toriginStyle: style,\n \t\t\tlevel: level,\n \t\t\tprecedentChildNodes: undefined\n \t\t};\n \t\tconst childNodes = this.addPrecedentChildNodes(sheet,row,col,level);\n"
                },
                {
                    "date": 1626940347204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,4 +219,6 @@\n }\n \n \n \n+\n+\n"
                },
                {
                    "date": 1626940860564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n \t\tthis.sheet.getCell(node.row,node.col).backColor(clear ? 'white' : precedentLevelColor[node.level]);\n \t\tif(node.precedentChildNodes){\n \t\t\tnode.precedentChildNodes.forEach(child => this.paintPrecedentCells(sheet,child,clear));\n \t\t}\n-\t\tsheet.resumePaint();\n+\t\tsheet.resumePaint();  \n \n \t}\n \n \tpaintDependentCells(sheet: Worksheet,node: TreeNode){\n"
                },
                {
                    "date": 1626942787697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,30 @@\n+/*\n+ *                        _oo0oo_\n+ *                       o8888888o\n+ *                       88\" . \"88\n+ *                       (| -_- |)\n+ *                       0\\  =  /0\n+ *                     ___/`---'\\___\n+ *                   .' \\\\|     |// '.\n+ *                  / \\\\|||  :  |||// \\\n+ *                 / _||||| -:- |||||- \\\n+ *                |   | \\\\\\  - /// |   |\n+ *                | \\_|  ''\\---/''  |_/ |\n+ *                \\  .-\\__  '-'  ___/-. /\n+ *              ___'. .'  /--.--\\  `. .'___\n+ *           .\"\" '<  `.___\\_<|>_/___.' >' \"\".\n+ *          | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n+ *          \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /\n+ *      =====`-.____`.___ \\_____/___.-`___.-'=====\n+ *                        `=---='\n+ * \n+ * \n+ *      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+ * \n+ *            佛祖保佑       永不宕机     永无BUG\n+ */\n+\n import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n import * as GC from \"@grapecity/spread-sheets\";\n import '@grapecity/spread-sheets-resources-zh';\n import Worksheet = GC.Spread.Sheets.Worksheet;\n"
                },
                {
                    "date": 1626942809118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,4 @@\n-/*\n- *                        _oo0oo_\n- *                       o8888888o\n- *                       88\" . \"88\n- *                       (| -_- |)\n- *                       0\\  =  /0\n- *                     ___/`---'\\___\n- *                   .' \\\\|     |// '.\n- *                  / \\\\|||  :  |||// \\\n- *                 / _||||| -:- |||||- \\\n- *                |   | \\\\\\  - /// |   |\n- *                | \\_|  ''\\---/''  |_/ |\n- *                \\  .-\\__  '-'  ___/-. /\n- *              ___'. .'  /--.--\\  `. .'___\n- *           .\"\" '<  `.___\\_<|>_/___.' >' \"\".\n- *          | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n- *          \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /\n- *      =====`-.____`.___ \\_____/___.-`___.-'=====\n- *                        `=---='\n- * \n- * \n- *      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n- * \n- *            佛祖保佑       永不宕机     永无BUG\n- */\n-\n import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n import * as GC from \"@grapecity/spread-sheets\";\n import '@grapecity/spread-sheets-resources-zh';\n import Worksheet = GC.Spread.Sheets.Worksheet;\n"
                },
                {
                    "date": 1626944462814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,13 @@\n \t * @param {boolean}   clear  是否清除\n \t */\n \tpaintPrecedentCells(sheet: Worksheet,node: TreeNode,clear: boolean = false): void{\n \t\tsheet.suspendPaint();\n-\t\tthis.sheet.getCell(node.row,node.col).backColor(clear ? 'white' : precedentLevelColor[node.level]);\n+\t\tif(clear){\n+\t\t\tthis.sheet.setStyle(node.row,node.col,node.orginStyle);\n+\t\t}else{\n+\t\t\tthis.sheet.getCell(node.row,node.col).backColor(precedentLevelColor[node.level]);\n+\t\t}\n \t\tif(node.precedentChildNodes){\n \t\t\tnode.precedentChildNodes.forEach(child => this.paintPrecedentCells(sheet,child,clear));\n \t\t}\n \t\tsheet.resumePaint();  \n"
                },
                {
                    "date": 1627019119679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,12 @@\n \tstyleUrls: ['./spread.component.less']\n })\n export class SpreadComponent implements OnInit {\n \n-\n+    // 工作薄\n \tspread: Workbook;\n \n+\t// 工作表\n \tsheet: Worksheet;\n \n \thostStyle = {\n \t\twidth: '100%',\n"
                },
                {
                    "date": 1627019642686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,8 +159,38 @@\n \t}\n \n \n \t/**\n+\t * 生成从属单元格的树结构\n+\t * @param {Worksheet} sheet  工作表 \n+\t * @param {number}    row    行索引\n+\t * @param {number}    col    列索引\n+\t * @param {number}\t  level  树结构的深度\n+\t * @returns {TreeNode}\n+\t */\n+\t createDependentTree(sheet: Worksheet,row: number,col: number,level?: number): TreeNode{\n+\t\tif(level == undefined){\n+\t\t\tlevel = 0;\n+\t\t}\n+        const style = sheet.getStyle(row,col);\n+\t\tconst node = {\n+\t\t\trow: row,\n+\t\t\tcol: col,\n+\t\t\toriginStyle: style,\n+\t\t\tlevel: level,\n+\t\t\tdependentChildNodes: undefined\n+\t\t};\n+\t\tconst childNodes = this.addPrecedentChildNodes(sheet,row,col,level);\n+\t\tif(childNodes.length > 0){\n+\t\t\tnode.dependentChildNodes = childNodes;\n+\t\t}\n+\n+\t\treturn node;\n+\n+\t}\n+\n+\n+\t/**\n \t * 生成引用单元格树的子节点\n \t * @param {Worksheet} sheet  工作表 \n \t * @param {number}    row    行索引\n \t * @param {number}    col    列索引\n@@ -216,8 +246,16 @@\n \t\tsheet.resumePaint();  \n \n \t}\n \n+\n+\n+\n+\n+\n+\n+\n+\n \tpaintDependentCells(sheet: Worksheet,node: TreeNode){\n \n \t}\n \n"
                },
                {
                    "date": 1627019692220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,8 +224,47 @@\n \n \t\t}\n \t\treturn nodeList;\n \t}\n+\n+\n+\n+\t/**\n+\t * 生成引用单元格树的子节点\n+\t * @param {Worksheet} sheet  工作表 \n+\t * @param {number}    row    行索引\n+\t * @param {number}    col    列索引\n+\t * @param {number}\t  level  树结构的深度 \n+\t * @returns {Array<TreeNode>}\n+\t */\n+\t addDependentChildNodes(sheet: Worksheet,row: number, col: number,level: number): Array<TreeNode>{\n+\t\tconst nodeList = [];\n+\t\tconst cellRangeList = sheet.getDependents(row,col);\n+\t\tif(cellRangeList.length > 0){\n+\t\t\tlevel++;\n+\t\t\tfor(let i = 0; i < cellRangeList.length; i++){\n+\t\t\t\tconst cell = cellRangeList[i];\n+\t\t\t\tconst row = cell.row;\n+\t\t\t\tconst col = cell.col;\n+\t\t\t\tconst rowCount = cell.rowCount;\n+\t\t\t\tconst colCount = cell.colCount;\n+\t\t\t\tif(rowCount > 1 || colCount > 1){\n+\t\t\t\t\tfor(let j = row; j < row + rowCount; j++){\n+\t\t\t\t\t\tfor(let k = col; k < col + colCount; k++){\n+\t\t\t\t\t\t\tconst node = this.createPrecedentTree(sheet,j,k,level);\n+\t\t\t\t\t\t\tnodeList.push(node);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}else{\n+\t\t\t\t\tconst node = this.createPrecedentTree(sheet,row,col,level);\n+\t\t\t\t\tnodeList.push(node);\n+\t\t\t\t}\n+\t\t\t\t\n+\t\t\t}\n+\n+\t\t}\n+\t\treturn nodeList;\n+\t}\n \t\n \n \t/**\n \t * 改变引用单元格的背景颜色\n"
                },
                {
                    "date": 1627019747541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n \n \n \n \t/**\n-\t * 生成引用单元格树的子节点\n+\t * 生成从属单元格树的子节点\n \t * @param {Worksheet} sheet  工作表 \n \t * @param {number}    row    行索引\n \t * @param {number}    col    列索引\n \t * @param {number}\t  level  树结构的深度 \n@@ -249,14 +249,14 @@\n \t\t\t\tconst colCount = cell.colCount;\n \t\t\t\tif(rowCount > 1 || colCount > 1){\n \t\t\t\t\tfor(let j = row; j < row + rowCount; j++){\n \t\t\t\t\t\tfor(let k = col; k < col + colCount; k++){\n-\t\t\t\t\t\t\tconst node = this.createPrecedentTree(sheet,j,k,level);\n+\t\t\t\t\t\t\tconst node = this.createDependentTree(sheet,j,k,level);\n \t\t\t\t\t\t\tnodeList.push(node);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}else{\n-\t\t\t\t\tconst node = this.createPrecedentTree(sheet,row,col,level);\n+\t\t\t\t\tconst node = this.createDependentTree(sheet,row,col,level);\n \t\t\t\t\tnodeList.push(node);\n \t\t\t\t}\n \t\t\t\t\n \t\t\t}\n"
                },
                {
                    "date": 1627019912359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import {mockData} from './mock.data';\n \n \n const precedentLevelColor = ['#FFFFFF', '#19E093', '#09E8DB', '#12A0D1', '#096CE8', '#0926DE'];\n+const dependentLevelColor = ['#FFFFFF', '#19E093', '#09E8DB', '#12A0D1', '#096CE8', '#0926DE'];\n \n interface TreeNode{\n \trow: number;\n \tcol: number;\n@@ -292,11 +293,25 @@\n \n \n \n \n-\n-\tpaintDependentCells(sheet: Worksheet,node: TreeNode){\n-\n+\t/**\n+\t * 改变从属单元格的背景颜色\n+\t * @param {Worksheet} sheet  工作表 \n+\t * @param {TreeNode}  node   树节点\n+\t * @param {boolean}   clear  是否清除\n+\t */\n+\tpaintDependentCells(sheet: Worksheet,node: TreeNode,clear: boolean = false){\n+\t\tsheet.suspendPaint();\n+\t\tif(clear){\n+\t\t\tthis.sheet.setStyle(node.row,node.col,node.orginStyle);\n+\t\t}else{\n+\t\t\tthis.sheet.getCell(node.row,node.col).backColor(dependentLevelColor[node.level]);\n+\t\t}\n+\t\tif(node.dependentChildNodes){\n+\t\t\tnode.dependentChildNodes.forEach(child => this.paintDependentCells(sheet,child,clear));\n+\t\t}\n+\t\tsheet.resumePaint();  \n \t}\n \n }\n \n"
                },
                {
                    "date": 1627020028660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,11 @@\n \t\t\tif(previousDenpendentTree || previousPrecedentTree){\n \t\t\t\tif(previousPrecedentTree.precedentChildNodes){\n \t\t\t\t\tthis.paintPrecedentCells(sheet,previousPrecedentTree,true);\n \t\t\t\t}\n+\t\t\t\tif(previousDenpendentTree.dependentChildNodes){\n+\t\t\t\t\tthis.paintDependentCells(sheet,previousDenpendentTree,true);\n+\t\t\t\t}\n \t\t\t}\n \n \t\t\tconst row = data.newSelections[0].row;\n \t\t\tconst col = data.newSelections[0].col;\n@@ -123,8 +126,15 @@\n \n             if(precedentTree.precedentChildNodes){\n \t\t\t\tthis.paintPrecedentCells(sheet,precedentTree);\n \t\t\t}\n+\n+\t\t\tconst dependentTree = this.createDependentTree(sheet,row,col);\n+\t\t\tpreviousDenpendentTree = dependentTree;\n+\n+            if(dependentTree.dependentChildNodes){\n+\t\t\t\tthis.paintDependentCells(sheet,precedentTree);\n+\t\t\t}\n \t\t\t\n \t\t});\n \t\t\n \t}\n"
                },
                {
                    "date": 1627020108538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import {mockData} from './mock.data';\n \n \n const precedentLevelColor = ['#FFFFFF', '#19E093', '#09E8DB', '#12A0D1', '#096CE8', '#0926DE'];\n-const dependentLevelColor = ['#FFFFFF', '#19E093', '#09E8DB', '#12A0D1', '#096CE8', '#0926DE'];\n+const dependentLevelColor = ['#FFFFFF', '#ADDE0B', '#E8DD0C', '#D1AD00', '#E8A90C', '#E08804'];\n \n interface TreeNode{\n \trow: number;\n \tcol: number;\n"
                },
                {
                    "date": 1627020359563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n \t\t\toriginStyle: style,\n \t\t\tlevel: level,\n \t\t\tdependentChildNodes: undefined\n \t\t};\n-\t\tconst childNodes = this.addPrecedentChildNodes(sheet,row,col,level);\n+\t\tconst childNodes = this.addDependentChildNodes(sheet,row,col,level);\n \t\tif(childNodes.length > 0){\n \t\t\tnode.dependentChildNodes = childNodes;\n \t\t}\n \n"
                },
                {
                    "date": 1627020565803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \t\t\tconst dependentTree = this.createDependentTree(sheet,row,col);\n \t\t\tpreviousDenpendentTree = dependentTree;\n \n             if(dependentTree.dependentChildNodes){\n-\t\t\t\tthis.paintDependentCells(sheet,precedentTree);\n+\t\t\t\tthis.paintDependentCells(sheet,dependentTree);\n \t\t\t}\n \t\t\t\n \t\t});\n \t\t\n"
                }
            ],
            "date": 1626920255556,
            "name": "Commit-0",
            "content": "import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport * as GC from \"@grapecity/spread-sheets\";\nimport Worksheet = GC.Spread.Sheets.Worksheet;\nimport Workbook = GC.Spread.Sheets.Workbook;\nimport '@grapecity/spread-sheets-resources-zh';\nGC.Spread.Common.CultureManager.culture('zh-cn');\nimport {mockData} from './mock.data';\n\n\n@Component({\n\tselector: 'app-spread',\n\ttemplateUrl: './spread.component.html',\n\tstyleUrls: ['./spread.component.less']\n})\nexport class SpreadComponent implements OnInit {\n\n\n\tspread: Workbook;\n\n\tsheet: Worksheet;\n\n\thostStyle = {\n\t\twidth: '100%',\n\t\theight: 'calc(100% - 61px)'\n\t};\n\n\t@ViewChild(\"statusBar\") statusBar: ElementRef;\n\n\n\tdrawOpen: boolean = false;\n\n\tngOnInit(): void {\n\t\t\n\t}\n\n\t/**\n\t * 电子表格初始化\n\t * @param {Object} $event \n\t */\n\tworkbookInit($event: any) {\n\t\tthis.spread = $event.spread;\n\t\tthis.sheet = this.spread.getActiveSheet();\n\t\tthis.initData(this.sheet);\n\t\tthis.bindStatus(this.spread);\n\t\tthis.bindEvents(this.sheet);\n\t\twindow.requestAnimationFrame(() => this.spread.refresh());\t\n\t}\n\n\t/**\n\t * 将模拟数据填充到电子表格中\n\t * @param {Worksheet} sheet 工作表 \n\t */\n\tinitData(sheet: Worksheet){\n\t\tsheet.suspendPaint();\n\t\tfor(let i = 0; i < mockData.length; i++){\n\t\t\tconst rowData = mockData[i];\n\t\t\tfor(let j = 0; j < rowData.length; j++){\n\t\t\t\tsheet.setValue(i,j,rowData[j]);\n\t\t\t}\n\t\t}\n\t\tsheet.resumePaint();\n\t}\n\n\t/**\n\t * 将状态栏绑定到电子表格工作薄上 \n\t * @param {Workbook} spread  工作薄\n\t */\n\tbindStatus(spread: Workbook){\n\t\tconst statusBar = new GC.Spread.Sheets.StatusBar.StatusBar(this.statusBar.nativeElement);\n        statusBar.bind(spread);\n\t}\n\n\t/**\n\t * 绑定各种事件\n\t * @param {Worksheet} sheet  工作表 \n\t */\n\tbindEvents(sheet: Worksheet){\n\t\tsheet.bind(GC.Spread.Sheets.Events.CellClick,this.cellClick);\n\n\t\tsheet.bind(GC.Spread.Sheets.Events.EditEnded,this.editEnded);\n\t\t\n\t\t\n\t\t\n\t}\n\n\n\tcellClick = (event:{[p: string]: any},data: {[p: string]: any}) => {\n\t\t// 获取从属单元格\n\t\tconst cellDependents = this.sheet.getDependents(data.row,data.col);\n\t\tconsole.log(cellDependents);\n\n\t\t// 获取引用单元格\n\t\tconst cellPrecedents = this.sheet.getPrecedents(data.row,data.col);\n\t\tconsole.log(cellPrecedents);\n\t\tthis.paintPrecedentCells(this.sheet,cellPrecedents);\n\t};\n\n\teditEnded = (event:{[p: string]: any},data: {[p: string]: any}) => {\n\t\t\n\t}\n\n\n\tbindSelectionChanged(sheet: Worksheet){\n\n\t}\n\n\n\tselectionChanged = (event:{[p: string]: any},data: {[p: string]: any}) => {\n\n\t}\n\n\n\n\n\n\tpaintDependentCells(sheet: Worksheet,cellList: Array<any>){\n\n\t}\n\n\tpaintPrecedentCells(sheet: Worksheet,cellList: Array<any>){\n\t\tsheet.suspendPaint();\n\t\tfor(let i = 0; i < cellList.length; i++){\n\t\t\tconst cellInfo = cellList[i];\n            const rowRange = cellInfo.rowCount + cellInfo.row;\n\t\t\tconst colRange = cellInfo.colCount + cellInfo.col;\n\t\t\tfor(let row = cellInfo.row; row < rowRange; row++){\n\t\t\t\tfor(let col = cellInfo.col; col < colRange; col++){\n\t\t\t\t\tsheet.getCell(row,col).backColor('red');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsheet.resumePaint();\n\n\t}\n\n\n\n\tchangeDrawStatus(){\n\t\tthis.drawOpen = !this.drawOpen;\n\t}\n\n\n\n\n\n  \n\n}\n"
        }
    ]
}